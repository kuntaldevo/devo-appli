###
### Clear Data
###

# Use Provided instance profile instead of using our own
provided-iam-instance-profile-arn = "arn:aws:iam::752595142617:instance-profile/Safeguards-EKSWorkerNode"
provided-eks-cluster-role-arn = "arn:aws:iam::752595142617:role/Safeguards-EKSCluster"
provided-worker-node-role-arn = "arn:aws:iam::752595142617:role/Safeguards-EKSWorkerNode"

#    role-arn = "arn:aws:iam::${data.aws_caller_identity.current.account_id}:role/Safeguards-EKSWorkerNode"


mongo-node-total = "3"

ssh-ingress-map = [
]

#this one is a quandry as there are system roles and infra roles

access-roles =[ {
    role-arn = "Safeguards-EKSServiceWorker"
    username = "kubernetes-admin"
    group = "system:masters"
  },{
    role-arn = "Paxata-EKS-Admin"
    username = "kubernetes-admin"
    group = "system:masters"
  },{
    role-arn = "Paxata-EKS-view-only"
    username = "user-view-only"
    group = ""
  }
]

aws-key-pair = "00030441-aue1-ent-keypair"

#### Infrastructure vars to split out

#certificate-arn = "arn:aws:acm:us-east-1:752595142617:certificate/027c9f28-efa2-4a0d-a9ad-170603416636"
#visible-domain = "paxata.com"
#maintenance-domain = ""


#mongo-password = "admin"
#mongo-username = "admin"

#ebs-encryption-key = "arn:aws:kms:us-east-1:752595142617:key/a94efff5-a977-41cb-bcc0-40290590dc00"
#feature-encrypt-mongo = "true"


#velero-aws-access-key-id = ""
#velero-aws-secret-access-key = ""
#backup-bucket-name = ""
