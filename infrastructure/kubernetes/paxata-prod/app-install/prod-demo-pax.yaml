
# Generated by gradle on 2019-07-09T23:13:10.828115Z
---
apiVersion: v1
kind: Namespace
metadata:
  name: demo
  labels:
    paxata.com/is-customer: "true"
---
apiVersion: v1
kind: Secret
metadata:
  namespace: demo
  name: demo-pes
type: Opaque
stringData:
  pes.properties: |-
    px.encryption.pes.keyseed=CHECKINLASTPASS
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  namespace: demo
  name: demo-core-site
stringData:
  core-site.xml: |-
    <configuration>
        <property>
            <name>fs.defaultFS</name>
            <value>s3a://paxata-demo-e1-datalibrary</value>
        </property>
        <property>
            <name>fs.s3a.access.key</name>
            <value>CHECKINLASTPASS</value>
        </property>
        <property>
            <name>fs.s3a.secret.key</name>
            <value>CHECKINLASTPASS</value>
        </property>
        <property>
            <name>fs.s3a.aws.credentials.provider</name>
            <value>org.apache.hadoop.fs.s3a.SimpleAWSCredentialsProvider</value>
        </property>
        <property>
            <name>hadoop.security.authentication</name>
            <value>simple</value>
        </property>
        <property>
            <name>fs.s3a.buffer.dir</name>
            <value>/usr/local/paxata/server/tmp</value>
            <description>Comma separated list of directories that will be used to buffer file uploads to. No effect if fs.s3a.fast.upload is true.
            </description>
        </property>
        <property>
            <name>fs.s3a.impl</name>
            <value>org.apache.hadoop.fs.s3a.S3AFileSystem</value>
            <description>The implementation class of the S3A Filesystem</description>
        </property>
        <property>
            <name>fs.s3.enableServerSideEncryption</name>
            <value>true</value>
        </property>
        <property>
            <name>fs.s3a.fast.upload</name>
            <value>true</value>
        </property>
        <property>
            <name>fs.s3a.threads.max</name>
            <value>20</value>
        </property>
        <property>
            <name>fs.s3a.threads.core</name>
            <value>10</value>
        </property>
        <property>
            <name>fs.s3a.connection.maximum</name>
            <value>30</value>
        </property>
        <property>
            <name>fs.s3a.user.agent.prefix</name>
            <value>APN/1.0 Paxata/1.0 S3LibaryStorage/1.0</value>
            <description>
            Sets a custom value that will be prepended to the User-Agent header sent in HTTP requests to the S3 back-end by S3AFileSystem.
            The User-Agent header always includes the Hadoop version number followed by a string generated by the AWS SDK.
            An example is "User-Agent: Hadoop 2.8.0, aws-sdk-java/1.10.6". If this optional property is set, then its value is prepended
            to create a customized User-Agent.  For example, if this configuration property was set to "MyApp", then an example of the
            resulting User-Agent would be "User-Agent: MyApp, Hadoop 2.8.0, aws-sdk-java/1.10.6".
            </description>
        </property>
    </configuration>


---
apiVersion: paxata.com/v1beta1
kind: PaxInstallation
metadata:
  name: prod
  namespace: demo
spec:
  active: true
  mongo:
    databaseName: paxata-demo
  libraryStorage:
    type: s3
    coreSiteSecretName: demo-core-site
    rootPath: /datalibrary
  paxserver:
    jvmArgs:
      - "-Duser.timezone=America/Los_Angeles"
      - "-DLog4jContextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector"
      - "-Dsun.jnu.encoding=UTF8"
      - "-Dfile.encoding=UTF8"
      - "-XX:+UseG1GC"
      - "-XX:-OmitStackTraceInFastThrow"
      - "-XX:+AlwaysPreTouch"
      - "-XX:InitiatingHeapOccupancyPercent=70"
      - "-XX:MaxGCPauseMillis=200"
      - "-XX:MaxMetaspaceSize=512m"
      - "-XX:MetaspaceSize=256m"
      - "-Dsun.reflect.noInflation=true"
      - "-XX:+HeapDumpOnOutOfMemoryError"
      - "-XX:HeapDumpPath=/usr/local/paxata/server/logs"
    applicationProperties:
        px.email.password: "k*#xjqcMsXh^GwX%6p6F"
        px.email.smtp.host: "smtp.gmail.com"
        px.email.smtp.port: "465"
        px.email.use.ssl: "true"
        px.email.from.address: "noreply@paxata.com"
        px.email.bounce.address: "support@paxata.com"
        px.ssl.include.protocols: "TLSv1.1,TLSv1.2"
        px.ssl.exclude.protocols: "SSLv3,TLSv1.0"
        px.hsts.header.value: "px.hsts.header.value=max-age=31536000; includeSubDomains"
        px.use.hsts: "true"
        px.websocket.trace: sdk
        px.diagnostic.enabled: "true"
        px.diagnostic.trace.enabled: "true"
        px.diagnostic.traces.websocket-trigger: all
        px.automation.scheduler.numThreads: "0"
        px.pipeline.cache.expiration.time: "1"
        guardrail.instana.browser.tracking.key: "nrdPxURdTGqoCRL4p_c7Fw"
    imageName: dtr.paxatadev.com/paxata/release_k8s_paxata-server
    imageVersion: 2019.2.0.1.2167
    memoryMB: 16384
    numCpus: 7
  pesKeySecretName: demo-pes
  pipelineProxy:
    applicationProperties:
        px_pps_spark_conf_spark_driver_extraJavaOptions: "-Dpx.total.cache.capacity=1500000"
        px_pps_spark_conf_spark_kubernetes_allocation_batch.size: "10"
        px_pps_spark_conf_spark_kubernetes_memoryOverheadFactor: "0.4"
        SPARK_HOME: "/opt/spark"
        px_pps_spark_conf_spark_kubernetes_container_image: "365762923425.dkr.ecr.us-east-1.amazonaws.com/spark:2.4.4"
    imageName: dtr.paxatadev.com/paxata/release_pipeline_proxy
    imageVersion: 2019.2.0.1.2167
    memoryMB: 2048
    numCpus: 2